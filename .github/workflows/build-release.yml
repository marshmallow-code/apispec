name: build
on:
  push:
    branches: ["dev", "*.x-line"]
    tags: ["*"]
  pull_request:
  # Run builds nightly to catch incompatibilities with new marshmallow releases
  schedule:
    - cron: "0 0 * * *"
jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {
              name: "3.8-ma3",
              python: "3.8",
              os: ubuntu-latest,
              tox: py38-marshmallow3,
            }
          - {
              name: "3.12-ma3",
              python: "3.12",
              os: ubuntu-latest,
              tox: py312-marshmallow3,
            }
          - {
              name: "3.12-madev",
              python: "3.12",
              os: ubuntu-latest,
              tox: py312-marshmallowdev,
            }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - run: python -m pip install --upgrade pip wheel
      - run: pip install tox
      - run: tox -e${{ matrix.tox }}
  build:
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install pypa/build
        run: python3 -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
  # this duplicates pre-commit.ci, so only run it on tags
  # it guarantees that linting is passing prior to a release
  lint-pre-release:
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.0.0
      - uses: actions/setup-python@v4.7.0
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip
      - run: python -m pip install tox
      - run: python -m tox -e lint
  publish-to-pypi:
    name: PyPI release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, tests, lint-pre-release]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/apispec
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
